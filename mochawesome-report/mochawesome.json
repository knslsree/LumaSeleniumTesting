{
  "stats": {
    "suites": 2,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2023-05-16T08:23:18.429Z",
    "end": "2023-05-16T08:23:57.604Z",
    "duration": 39175,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "4a0d8cf8-275d-45eb-a094-84691ae388ab",
      "title": "",
      "fullFile": "D:\\Sravani\\Testare\\Lumaproject\\LumaSeleniumTesting\\test\\sravanicategory.js",
      "file": "\\test\\sravanicategory.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0f9886fa-9b4e-4990-8f8e-8f079171d445",
          "title": "Sort by Category",
          "fullFile": "D:\\Sravani\\Testare\\Lumaproject\\LumaSeleniumTesting\\test\\sravanicategory.js",
          "file": "\\test\\sravanicategory.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "75476f01-7a67-46c4-96f5-65799c850452",
              "title": "I searched for the category",
              "fullFile": "D:\\Sravani\\Testare\\Lumaproject\\LumaSeleniumTesting\\test\\sravanicategory.js",
              "file": "\\test\\sravanicategory.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "I should see the sorted order of a category",
                  "fullTitle": "Sort by Category I searched for the category I should see the sorted order of a category",
                  "timedOut": null,
                  "duration": 38270,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Launch the web browser\nconst driver = await new Builder().forBrowser('firefox').build();\ntry{\n    //Navigate to our application\n    await driver.get('https://magento.softwaretestingboard.com/');\n     //Find the first category  'whats New'\n     await driver.wait(until.elementLocated(By.css('.ui-menu-item')), 20000);\n     await driver.findElement(By.css('.ui-menu-item > a:nth-child(1)')).click();\n    await driver.navigate().back();\n     await driver.sleep(2000);\n     //Find the second category Women \n     await driver.wait(until.elementLocated(By.css('.parent.ui-menu-item')), 20000);\n     await driver.findElement(By.css('.parent.ui-menu-item > a:nth-child(1)')).click();\n     //Find the subcategory tops in women\n     await driver.wait(until.elementLocated(By.xpath(\"//a[contains(text(),'Tops')]\")), 20000);\n     await driver.findElement(By.xpath(\"//a[contains(text(),'Tops')]\")).click();\n     await driver.wait(until.elementLocated(By.css('.base')), 10000);\n     let womenTops = await driver.findElement(By.css('.base')).getText();\n     console.log(womenTops);\n     await driver.navigate().back();\n     //Find the subcategory bottoms in women\n     await driver.wait(until.elementLocated(By.xpath(\"//a[contains(text(),'Bottoms')]\")), 20000);\n     await driver.findElement(By.xpath(\"//a[contains(text(),'Bottoms')]\")).click();\n     await driver.wait(until.elementLocated(By.css('.base')), 10000);\n     let womenBottoms = await driver.findElement(By.css('.base')).getText();\n     console.log(womenBottoms);\n     await driver.sleep(2000);\n    await driver.navigate().back();\n    \n    //Find the third category Women  \n    await driver.wait(until.elementLocated(By.css('a[href$=\"/men.html\"]')),10000);\n     await driver.findElement(By.css('a[href$=\"/men.html\"]')).click();\n     //Find the subcategory tops in men\n     await driver.wait(until.elementLocated(By.xpath(\"//a[contains(text(),'Tops')]\")), 20000);\n     await driver.findElement(By.xpath(\"//a[contains(text(),'Tops')]\")).click();\n     await driver.wait(until.elementLocated(By.css('.base')), 10000);\n     let menTops = await driver.findElement(By.css('.base')).getText();\n     console.log(menTops);\n     await driver.sleep(2000);\n     await driver.navigate().back();\n     \n    //Find the subcategory bottoms in men\n     await driver.wait(until.elementLocated(By.xpath(\"//a[contains(text(),'Bottoms')]\")), 20000);\n     await driver.findElement(By.xpath(\"//a[contains(text(),'Bottoms')]\")).click();\n     await driver.wait(until.elementLocated(By.css('.base')), 10000);\n     let menBottoms = await driver.findElement(By.css('.base')).getText();\n     console.log(menBottoms);\n     await driver.sleep(2000);\n     //Asserts\n    assert.equal(womenTops, 'Tops');//Builtin Node\n    expect(womenTops).to.equal('Tops');// Chai expect\n    womenTops.should.equal('Tops');// Chai should\n    assert.equal(womenBottoms, 'Bottoms');//Builtin Node\n    expect(womenBottoms).to.equal('Bottoms');// Chai expect\n    womenBottoms.should.equal('Bottoms');// Chai should\n                \n    assert.equal(menTops, 'Tops');//Builtin Node\n    expect(menTops).to.equal('Tops');// Chai expect\n    menTops.should.equal('Tops');// Chai should\n                \n    assert.equal(menBottoms, 'Bottoms');//Builtin Node\n    expect(menBottoms).to.equal('Bottoms');// Chai expect\n    menBottoms.should.equal('Bottoms');// Chai should\n                \n                \n     //await driver.quit();\n     }catch(error)\n     {\n    console.log(error);\n    }\n    finally{\n   \n     await driver.quit();\n     }",
                  "err": {},
                  "uuid": "6cd53615-2e87-48ce-af01-86b148a1eba7",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6cd53615-2e87-48ce-af01-86b148a1eba7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 38270,
              "root": false,
              "rootEmpty": false,
              "_timeout": null
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}